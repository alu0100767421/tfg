{
  "_args": [
    [
      {
        "raw": "mdlint",
        "scope": null,
        "escapedName": "mdlint",
        "name": "mdlint",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/alexander/Escritorio/tfg/node_modules"
    ]
  ],
  "_from": "mdlint@latest",
  "_id": "mdlint@0.1.0",
  "_inCache": true,
  "_location": "/mdlint",
  "_npmUser": {
    "name": "chriswren",
    "email": "chris@chrisawren.com"
  },
  "_npmVersion": "1.2.32",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mdlint",
    "scope": null,
    "escapedName": "mdlint",
    "name": "mdlint",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/mdlint/-/mdlint-0.1.0.tgz",
  "_shasum": "85037cd9ae0a1c9512c8144dc53103a95f792022",
  "_shrinkwrap": null,
  "_spec": "mdlint",
  "_where": "/home/alexander/Escritorio/tfg/node_modules",
  "author": {
    "name": "ChrisWren"
  },
  "bin": {
    "mdlint": "./bin/mdlint"
  },
  "bugs": {
    "url": "https://github.com/ChrisWren/mdlint/issues"
  },
  "dependencies": {
    "colors": "~0.6.0-1",
    "commander": "~1.3.0",
    "esprima": "~1.0.3",
    "glob": "~3.2.1",
    "lodash": "~1.3.1",
    "request": "~2.22.0"
  },
  "description": "Lints markdown files to find JavaScript syntax errors",
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-watch": "~0.5.1",
    "grunt-release": "~0.5.1",
    "grunt-simple-mocha": "~0.4.0",
    "matchdep": "~0.1.2",
    "rewire": "~1.1.3",
    "should": "~1.2.2",
    "sinon": "~1.7.3"
  },
  "directories": {},
  "dist": {
    "shasum": "85037cd9ae0a1c9512c8144dc53103a95f792022",
    "tarball": "https://registry.npmjs.org/mdlint/-/mdlint-0.1.0.tgz"
  },
  "homepage": "https://github.com/ChrisWren/mdlint#readme",
  "keywords": [
    "markdown",
    "lint"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "chriswren",
      "email": "chris@chrisawren.com"
    }
  ],
  "name": "mdlint",
  "optionalDependencies": {},
  "preferGlobal": true,
  "readme": "# mdlint\n> Lint JavaScript code blocks in markdown files to find syntax errors.\n\n[![NPM version](https://badge.fury.io/js/mdlint.png)](http://badge.fury.io/js/mdlint) [![Dependency Status](https://gemnasium.com/ChrisWren/mdlint.png)](https://gemnasium.com/ChrisWren/mdlint) [![Travis Status](https://travis-ci.org/ChrisWren/mdlint.png)](https://travis-ci.org/ChrisWren/mdlint)\n\n# Installation\n```bash\nnpm install -g mdlint\n```\n\n# Usage\n\n    mdlint [command] <arg> [options]\n\nmdlint is used as a command-line utility. It lints markdown files sourced from different locations using the following four commands:\n\n\n**Commands:**\n\n    glob  <fileGlob>        lints local markdown files that match a file glob\n    user  <username>        lints all READMEs from a user's GitHub repos\n    repo  <user/repo>       lints a README from a GitHub repo\n    query <query> [options] lints READMEs from repos returned by a GitHub query\n\n**Options:**\n\n    -v, --verbose    report linting of all files\n    --page=<pageNum> page of results to return from query command. Defaults to 0.\n    -h, --help       output usage information\n    -V, --version    output the version number\n\n## Sample Usage\n\nHere is an example of mdlint being run on a set of local files. **Note that the glob expression must be wrapped in quotes as `*` is a special character in the terminal**:\n```bash\nmdlint glob \"docs/*.md\"\n```\n\nHere is an example of mdlint being run on all READMEs from a user's GitHub repos:\n```bash\nmdlint user ChrisWren\n```\n\nHere is an example of mdlint being run on a GitHub repo's README file:\n```bash\nmdlint repo ChrisWren/grunt-pages\n```\n\n\nHere is an example of mdlint being run on the collection of READMEs returned from page 2 of the `grunt` [GitHub repositories search query](http://developer.github.com/v3/search/#search-repositories):\n```bash\nmdlint query grunt --page=2\n```\n\n### Usage with implicit commands\n\nAny argument with a `*` or `.` will be interpreted as a local file glob, so you can lint a local file with the following shorthand command:\n```bash\nmdlint \"README.md\"\n```\n\nAny argument without a `*` or `.` that includes a `/` will be interpreted as a GitHub repo, so you can lint a repo with the following shorthand command:\n```bash\nmdlint ChrisWren/grunt-nodemon\n```\n\nAny other argument will be intrepreted as a GitHub user, so you could lint all of a user's repos with the following shorthand command:\n```bash\nmdlint ChrisWren\n```\n\n## Accepted JavaScript Partials\n\nmdlint accepts certain pre-defined JavaScript partials which it will preprocess so that an error isn't thrown during syntax validation.\n\n### Object partials\n\n```js\ngruntplugin: {\n  \n}\n```\n\n```js\n{\n  key: 'value'\n}\n```\n\n### Function partials\n```js\nfunction () {\n  \n}\n```\n\n## Accepted Non-JavaScript statements\n\n- `...` will be removed from code blocks\n\n# Changelog\n\n**0.0.6** - mdlint exits with `1` when any file fails linting. Improved object partial parsing.\n\n**0.0.5** - Fixed bug where only the first error in a file was logged. Added prettier logging.\n\n**0.0.4** - Added support for [implicit commands](https://github.com/ChrisWren/mdlint#usage-with-implicit-commands).\n\n**0.0.3** - Added ability to parse `javascript` code blocks.\n\n**0.0.2** - Made `page` parameter optional for `query` command.\n\n**0.0.1** - Added `user` command.\n\n**0.0.0** - Initial Release.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ChrisWren/mdlint.git"
  },
  "scripts": {
    "test": "grunt"
  },
  "version": "0.1.0"
}
